{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tmart\\\\Documents\\\\hello-next\\\\components\\\\Game.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Board from './Board';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true,\n      stepnumber: 0,\n      gridColNumber: [0],\n      gridRowNumber: [0]\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepnumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepnumber: history.length,\n      gridColNumber: this.state.gridColNumber.concat(i % 3 + 1),\n      gridRowNumber: this.state.gridRowNumber.concat(Math.floor(i / 3 + 1))\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepnumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepnumber];\n    const winner = calculateWinner(current.squares);\n    const column = this.state.gridColNumber;\n    const row = this.state.gridRowNumber;\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move + 'Col:' + column[move] + ' Row:' + row[move] : 'Go to game start';\n      return __jsx(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return __jsx(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"jsx-474003458\" + \" \" + \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, __jsx(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), __jsx(_JSXStyle, {\n      id: \"474003458\",\n      __self: this\n    }, \"body{font:14px \\\"Century Gothic\\\",Futura,sans-serif;margin:20px;}ol,ul{padding-left:30px;}.board-row:after{clear:both;content:\\\"\\\";display:table;}.status{margin-bottom:10px;}.square{background:#fff;border:1px solid #999;float:left;font-size:24px;font-weight:bold;line-height:34px;height:34px;margin-right:-1px;margin-top:-1px;padding:0;text-align:center;width:34px;}.square:focus{outline:none;}.kbd-navigation .square:focus{background:#ddd;}.game{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}.game-info{margin-left:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcdG1hcnRcXERvY3VtZW50c1xcaGVsbG8tbmV4dFxcY29tcG9uZW50c1xcR2FtZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RTZCLEFBR2tFLEFBSzdCLEFBSVAsQUFNUSxBQUlILEFBZUgsQUFJRyxBQUlILEFBS0ksV0FyQ04sRUF5QmIsR0Fmd0IsQUFtQnhCLENBU0EsQ0ExQ0EsQ0FVQSxHQUxnQixjQUNoQixFQVNhLE9BcEJDLElBcUJHLFFBcEJqQixPQXFCbUIsVUFvQkUsT0FuQkYsaUJBQ0wsWUFDTSxrQkFDRixlQWlCbEIsQ0FoQlksVUFDUSxrQkFDUCxXQUNiIiwiZmlsZSI6IkM6XFxVc2Vyc1xcdG1hcnRcXERvY3VtZW50c1xcaGVsbG8tbmV4dFxcY29tcG9uZW50c1xcR2FtZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IEJvYXJkIGZyb20gJy4vQm9hcmQnXHJcblxyXG5jbGFzcyBHYW1lIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3RvciAocHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKVxyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgaGlzdG9yeTogW3tcclxuICAgICAgICBzcXVhcmVzOiBBcnJheSg5KS5maWxsKG51bGwpXHJcbiAgICAgIH1dLFxyXG4gICAgICB4SXNOZXh0OiB0cnVlLFxyXG4gICAgICBzdGVwbnVtYmVyOiAwLFxyXG4gICAgICBncmlkQ29sTnVtYmVyOiBbMF0sXHJcbiAgICAgIGdyaWRSb3dOdW1iZXI6IFswXVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaGFuZGxlQ2xpY2sgKGkpIHtcclxuICAgIGNvbnN0IGhpc3RvcnkgPSB0aGlzLnN0YXRlLmhpc3Rvcnkuc2xpY2UoMCwgdGhpcy5zdGF0ZS5zdGVwbnVtYmVyICsgMSlcclxuICAgIGNvbnN0IGN1cnJlbnQgPSBoaXN0b3J5W2hpc3RvcnkubGVuZ3RoIC0gMV1cclxuICAgIGNvbnN0IHNxdWFyZXMgPSBjdXJyZW50LnNxdWFyZXMuc2xpY2UoKVxyXG4gICAgaWYgKGNhbGN1bGF0ZVdpbm5lcihzcXVhcmVzKSB8fCBzcXVhcmVzW2ldKSB7XHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgc3F1YXJlc1tpXSA9IHRoaXMuc3RhdGUueElzTmV4dCA/ICdYJyA6ICdPJ1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIGhpc3Rvcnk6IGhpc3RvcnkuY29uY2F0KFt7XHJcbiAgICAgICAgc3F1YXJlczogc3F1YXJlc1xyXG4gICAgICB9XSksXHJcbiAgICAgIHhJc05leHQ6ICF0aGlzLnN0YXRlLnhJc05leHQsXHJcbiAgICAgIHN0ZXBudW1iZXI6IGhpc3RvcnkubGVuZ3RoLFxyXG4gICAgICBncmlkQ29sTnVtYmVyOiB0aGlzLnN0YXRlLmdyaWRDb2xOdW1iZXIuY29uY2F0KGkgJSAzICsgMSksXHJcbiAgICAgIGdyaWRSb3dOdW1iZXI6IHRoaXMuc3RhdGUuZ3JpZFJvd051bWJlci5jb25jYXQoTWF0aC5mbG9vcihpIC8gMyArIDEpKVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIGp1bXBUbyAoc3RlcCkge1xyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIHN0ZXBudW1iZXI6IHN0ZXAsXHJcbiAgICAgIHhJc05leHQ6IChzdGVwICUgMikgPT09IDBcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICByZW5kZXIgKCkge1xyXG4gICAgY29uc3QgaGlzdG9yeSA9IHRoaXMuc3RhdGUuaGlzdG9yeVxyXG4gICAgY29uc3QgY3VycmVudCA9IGhpc3RvcnlbdGhpcy5zdGF0ZS5zdGVwbnVtYmVyXVxyXG4gICAgY29uc3Qgd2lubmVyID0gY2FsY3VsYXRlV2lubmVyKGN1cnJlbnQuc3F1YXJlcylcclxuICAgIGNvbnN0IGNvbHVtbiA9IHRoaXMuc3RhdGUuZ3JpZENvbE51bWJlclxyXG4gICAgY29uc3Qgcm93ID0gdGhpcy5zdGF0ZS5ncmlkUm93TnVtYmVyXHJcblxyXG4gICAgY29uc3QgbW92ZXMgPSBoaXN0b3J5Lm1hcCgoc3RlcCwgbW92ZSkgPT4ge1xyXG4gICAgICBjb25zdCBkZXNjID0gbW92ZVxyXG4gICAgICAgID8gJ0dvIHRvIG1vdmUgIycgKyBtb3ZlICsgJ0NvbDonICsgY29sdW1uW21vdmVdICsgJyBSb3c6JyArIHJvd1ttb3ZlXVxyXG4gICAgICAgIDogJ0dvIHRvIGdhbWUgc3RhcnQnXHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgPGxpIGtleSA9IHttb3ZlfT5cclxuICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gdGhpcy5qdW1wVG8obW92ZSl9PntkZXNjfTwvYnV0dG9uPlxyXG4gICAgICAgIDwvbGk+XHJcbiAgICAgIClcclxuICAgIH0pXHJcbiAgICBsZXQgc3RhdHVzXHJcbiAgICBpZiAod2lubmVyKSB7XHJcbiAgICAgIHN0YXR1cyA9ICdXaW5uZXI6ICcgKyB3aW5uZXJcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHN0YXR1cyA9ICdOZXh0IHBsYXllciAnICsgKHRoaXMuc3RhdGUueElzTmV4dCA/ICdYJyA6ICdPJylcclxuICAgIH1cclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJnYW1lXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWUgPSBcImdhbWUtYm9hcmRcIj5cclxuICAgICAgICAgIDxCb2FyZFxyXG4gICAgICAgICAgICBzcXVhcmVzID0ge2N1cnJlbnQuc3F1YXJlc31cclxuICAgICAgICAgICAgb25DbGljayA9IHsoaSkgPT4gdGhpcy5oYW5kbGVDbGljayhpKX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxyXG4gICAgICAgICAgICAgICAgYm9keSB7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQ6IDE0cHggXCJDZW50dXJ5IEdvdGhpY1wiLCBGdXR1cmEsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMjBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgb2wsIHVsIHtcclxuICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAuYm9hcmQtcm93OmFmdGVyIHtcclxuICAgICAgICAgICAgICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAuc3RhdHVzIHtcclxuICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLnNxdWFyZSB7XHJcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XHJcbiAgICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMzRweDtcclxuICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAzNHB4O1xyXG4gICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IC0xcHg7XHJcbiAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IC0xcHg7XHJcbiAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgd2lkdGg6IDM0cHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC5zcXVhcmU6Zm9jdXMge1xyXG4gICAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAua2JkLW5hdmlnYXRpb24gLnNxdWFyZTpmb2N1cyB7XHJcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNkZGQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC5nYW1lIHtcclxuICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLmdhbWUtaW5mbyB7XHJcbiAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJnYW1lLWluZm9cIj5cclxuICAgICAgICAgIDxkaXY+e3N0YXR1c308L2Rpdj5cclxuICAgICAgICAgIDxvbD57bW92ZXN9PC9vbD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQ2FsY3VsYXRlcyB3aGV0aGVyIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBnYW1lIGhhcyBhIHdpbm5lclxyXG4gKiBAcGFyYW0ge0FycmF5fSBzcXVhcmVzIC0gQW4gYXJyYXkgcmVwcmVzZW50aW5nIHRoZSBjdXJyZW50IGdhbWUgYm9hcmRcclxuICovXHJcbmZ1bmN0aW9uIGNhbGN1bGF0ZVdpbm5lciAoc3F1YXJlcykge1xyXG4gIGNvbnN0IGxpbmVzID0gW1xyXG4gICAgWzAsIDEsIDJdLFxyXG4gICAgWzMsIDQsIDVdLFxyXG4gICAgWzYsIDcuOF0sXHJcbiAgICBbMCwgMywgNl0sXHJcbiAgICBbMSwgNCwgN10sXHJcbiAgICBbMiwgNSwgOF0sXHJcbiAgICBbMCwgNCwgOF0sXHJcbiAgICBbMiwgNCwgNl1cclxuICBdXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykge1xyXG4gICAgY29uc3QgW2EsIGIsIGNdID0gbGluZXNbaV1cclxuICAgIGlmIChzcXVhcmVzW2FdICYmIHNxdWFyZXNbYV0gPT09IHNxdWFyZXNbYl0gJiYgc3F1YXJlc1thXSA9PT0gc3F1YXJlc1tjXSkge1xyXG4gICAgICByZXR1cm4gc3F1YXJlc1thXVxyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gbnVsbFxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IEdhbWVcclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\tmart\\\\\\\\Documents\\\\\\\\hello-next\\\\\\\\components\\\\\\\\Game.js */\")), __jsx(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, status), __jsx(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n/**\r\n * Calculates whether the current state of the game has a winner\r\n * @param {Array} squares - An array representing the current game board\r\n */\n\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7.8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/tmart/Documents/hello-next/components/Game.js"],"names":["React","Board","Game","Component","constructor","props","state","history","squares","Array","fill","xIsNext","stepnumber","gridColNumber","gridRowNumber","handleClick","i","slice","current","length","calculateWinner","setState","concat","Math","floor","jumpTo","step","render","winner","column","row","moves","map","move","desc","status","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Board from './Board'\r\n\r\nclass Game extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      xIsNext: true,\r\n      stepnumber: 0,\r\n      gridColNumber: [0],\r\n      gridRowNumber: [0]\r\n    }\r\n  }\r\n\r\n  handleClick (i) {\r\n    const history = this.state.history.slice(0, this.state.stepnumber + 1)\r\n    const current = history[history.length - 1]\r\n    const squares = current.squares.slice()\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepnumber: history.length,\r\n      gridColNumber: this.state.gridColNumber.concat(i % 3 + 1),\r\n      gridRowNumber: this.state.gridRowNumber.concat(Math.floor(i / 3 + 1))\r\n    })\r\n  }\r\n\r\n  jumpTo (step) {\r\n    this.setState({\r\n      stepnumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const history = this.state.history\r\n    const current = history[this.state.stepnumber]\r\n    const winner = calculateWinner(current.squares)\r\n    const column = this.state.gridColNumber\r\n    const row = this.state.gridRowNumber\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move\r\n        ? 'Go to move #' + move + 'Col:' + column[move] + ' Row:' + row[move]\r\n        : 'Go to game start'\r\n      return (\r\n        <li key = {move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      )\r\n    })\r\n    let status\r\n    if (winner) {\r\n      status = 'Winner: ' + winner\r\n    } else {\r\n      status = 'Next player ' + (this.state.xIsNext ? 'X' : 'O')\r\n    }\r\n    return (\r\n      <div className = \"game\">\r\n        <div className = \"game-board\">\r\n          <Board\r\n            squares = {current.squares}\r\n            onClick = {(i) => this.handleClick(i)}\r\n          />\r\n          <style jsx global>{`\r\n                body {\r\n                  font: 14px \"Century Gothic\", Futura, sans-serif;\r\n                  margin: 20px;\r\n                }\r\n                \r\n                ol, ul {\r\n                  padding-left: 30px;\r\n                }\r\n                \r\n                .board-row:after {\r\n                  clear: both;\r\n                  content: \"\";\r\n                  display: table;\r\n                }\r\n                \r\n                .status {\r\n                  margin-bottom: 10px;\r\n                }\r\n                \r\n                .square {\r\n                  background: #fff;\r\n                  border: 1px solid #999;\r\n                  float: left;\r\n                  font-size: 24px;\r\n                  font-weight: bold;\r\n                  line-height: 34px;\r\n                  height: 34px;\r\n                  margin-right: -1px;\r\n                  margin-top: -1px;\r\n                  padding: 0;\r\n                  text-align: center;\r\n                  width: 34px;\r\n                }\r\n                \r\n                .square:focus {\r\n                  outline: none;\r\n                }\r\n                \r\n                .kbd-navigation .square:focus {\r\n                  background: #ddd;\r\n                }\r\n                \r\n                .game {\r\n                  display: flex;\r\n                  flex-direction: row;\r\n                }\r\n                \r\n                .game-info {\r\n                  margin-left: 20px;\r\n                }\r\n    `}</style>\r\n        </div>\r\n        <div className = \"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Calculates whether the current state of the game has a winner\r\n * @param {Array} squares - An array representing the current game board\r\n */\r\nfunction calculateWinner (squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7.8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ]\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i]\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a]\r\n    }\r\n  }\r\n  return null\r\n}\r\nexport default Game\r\n"]},"metadata":{},"sourceType":"module"}